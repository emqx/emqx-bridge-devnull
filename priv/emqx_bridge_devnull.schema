%% emqx_bridge_devnull config
{mapping, "bridge.devnull.encode_payload_type", "emqx_bridge_devnull.encode_payload_type", [
  {datatype, {enum, [base64, plain]}},
  {default, base64}
]}.

{mapping, "bridge.devnull.hook.client.connected.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{mapping, "bridge.devnull.hook.client.disconnected.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{mapping, "bridge.devnull.hook.session.subscribed.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{mapping, "bridge.devnull.hook.session.unsubscribed.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{mapping, "bridge.devnull.hook.message.publish.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{mapping, "bridge.devnull.hook.message.acked.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{mapping, "bridge.devnull.hook.message.delivered.$name", "emqx_bridge_devnull.hooks", [
  {datatype, string}
]}.

{translation, "emqx_bridge_devnull.hooks", fun(Conf) ->
  Hooks = cuttlefish_variable:filter_by_prefix("bridge.devnull.hook", Conf),
  lists:map(
    fun({[_, _, _,Name1,Name2, _], Val}) ->
    {lists:concat([Name1,".",Name2]), list_to_binary(Val)}
  end, Hooks)
end}.
